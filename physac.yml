---
GENERATOR:
  PackageName: physac
  PackageDescription: "Package physac provides Go bindings for Physac."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes: ["../lib/raylib/src/physac.h"]
  Options:
    SafeStrings: true
    StructAccessors: true

PARSER:
  IncludePaths:
    - "/Applications/Xcode-11.3.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
    - "/Applications/Xcode-11.3.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0/include"
  SourcesPaths: ["lib/raylib/src/physac.h"]
  Defines:
    PHYSAC_STATIC: 1
    PHYSAC_DEFINE_VECTOR2_TYPE: 1

TRANSLATOR:
  ConstRules:
    defines: expand
    enum: expand
  PtrTips:
    function:
      # defaults
      - { target: ".", self: ref, tips: [sref, sref, sref, sref, sref, sref, sref, sref, sref] }
  Rules:
    global:
      - { transform: export }
    const:
      - { action: accept, from: ^PHYSAC_ }
      - { action: accept, from: ^PHYSICS_ }

      - { action: ignore, from: PHYSAC_VECTOR_ZERO }

      - { transform: title }
    function:
      - { action: accept, from: Physics }
      - { action: accept, from: ^FindAvailableBodyIndex }
      - { action: accept, from: ^CreateRandomPolygon }
      - { action: accept, from: ^CreateRectanglePolygon }
      - { action: accept, from: ^PhysicsLoop }
      - { action: accept, from: ^PhysicsStep }
      - { action: accept, from: ^FindAvailableManifoldIndex }
      - { action: accept, from: ^CreatePhysicsManifold }
      - { action: accept, from: ^DestroyPhysicsManifold }
      - { action: accept, from: ^SolvePhysicsManifold }
      - { action: accept, from: ^SolveCircleToCircle }
      - { action: accept, from: ^SolveCircleToPolygon }
      - { action: accept, from: ^SolvePolygonToCircle }
      - { action: accept, from: ^SolvePolygonToPolygon }
      - { action: accept, from: ^IntegratePhysicsForces }
      - { action: accept, from: ^InitializePhysicsManifolds }
      - { action: accept, from: ^IntegratePhysicsImpulses }
      - { action: accept, from: ^IntegratePhysicsVelocity }
      - { action: accept, from: ^CorrectPhysicsPositions }
      - { action: accept, from: ^FindAxisLeastPenetration }
      - { action: accept, from: ^FindIncidentFace }
      - { action: accept, from: ^Clip$ }
      - { action: accept, from: ^BiasGreaterThan }
      - { action: accept, from: ^TriangleBarycenter }
      - { action: accept, from: ^InitTimer$ }
      - { action: accept, from: ^GetTimeCount$ }
      - { action: accept, from: ^GetCurrentTime$ }
      - { action: accept, from: ^MathCross$ }
      - { action: accept, from: ^MathCrossVector2$ }
      - { action: accept, from: ^MathLenSqr$ }
      - { action: accept, from: ^MathDot$ }
      - { action: accept, from: ^DistSqr$ }
      - { action: accept, from: ^MathNormalize$ }
      - { action: accept, from: ^Mat2Radians$ }
      - { action: accept, from: ^Mat2Set$ }
      - { action: accept, from: ^Mat2Transpose$ }
      - { action: accept, from: ^Mat2MultiplyVector2$ }
    type:
      - { action: accept, from: Physics }
      - { action: accept, from: ^Vector2$ }
      - { action: accept, from: ^Matrix2x2$ }
      - { action: accept, from: ^PolygonData$ }
      - { action: accept, from: ^PhysicsShape$ }
      - { action: accept, from: ^PhysicsBodyData$ }
      - { action: accept, from: ^PhysicsManifoldData$ }

      - { action: replace, from: ^PhysicsBody$, to: "PhysicsBodyData" }
      - { action: replace, from: ^PhysicsManifold$, to: "PhysicsManifoldData" }
    private:
      - { transform: unexport }
    post-global:
      - { action: replace, from: _$ }
      - { load: snakecase }
