---
GENERATOR:
  PackageName: raylib
  PackageDescription: "Package raylib provides Go bindings for Raylib."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes:
    - ../lib/raylib/src/raylib.h
    - ../lib/raylib/src/raymath.h
    - ../lib/raylib/src/easings.h
  Options:
    SafeStrings: true
    StructAccessors: true

PARSER:
  IncludePaths:
    - "/Applications/Xcode-11.3.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"
    - "/Applications/Xcode-11.3.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0/include"
  SourcesPaths:
    - lib/raylib/src/raylib.h
    - lib/raylib/src/raymath.h
    - lib/raylib/src/easings.h

TRANSLATOR:
  ConstRules:
    defines: expand
    enum: expand
  PtrTips:
    function:
      # - { target: "^LoadFontData$", tips: [sref, sref, arr, sref, sref, sref] }
      # - { target: "^GenImageFontAtlas$", tips: [sref, ref, sref, sref, sref, sref] }

      # defaults
      - { target: "^LoadImageFromMemory$", self: ref, tips: [sref, arr, sref, sref, sref, sref, sref, sref, sref] }
      - { target: "^LoadFontFromMemory$", self: ref, tips: [sref, arr, sref, sref, sref, sref, sref, sref, sref] }
      - { target: "^LoadWaveFromMemory$", self: ref, tips: [sref, arr, sref, sref, sref, sref, sref, sref, sref] }
      - { target: ".", self: ref, tips: [sref, sref, sref, sref, sref, sref, sref, sref, sref] }
  Rules:
    global:
      - { transform: export }
    const:
      - { action: accept, from: ^PI$ }
      - { action: accept, from: DEG }
      - { action: accept, from: ^LOC_MAP }
      - { action: accept, from: ^MAP_ }
      - { action: accept, from: ^FLAG_ }
      - { action: accept, from: ^KEY_ }
      - { action: accept, from: ^MOUSE_ }
      - { action: accept, from: ^GAMEPAD_ }
      - { action: accept, from: ^LOC_ }
      - { action: accept, from: ^UNIFORM_ }
      - { action: accept, from: ^MAP_ }
      - { action: accept, from: ^UNCOMPRESSED_ }
      - { action: accept, from: ^COMPRESSED_ }
      - { action: accept, from: ^FILTER_ }
      - { action: accept, from: ^CUBEMAP_ }
      - { action: accept, from: ^WRAP_ }
      - { action: accept, from: ^FONT_ }
      - { action: accept, from: ^BLEND_ }
      - { action: accept, from: ^GESTURE_ }
      - { action: accept, from: ^CAMERA_ }
      - { action: accept, from: ^NPT_ }

      - { action: ignore, from: "(?i)Trace" }
      - { action: ignore, from: "SpriteFont" }

      - { transform: title }
    function:
      # raylib
      - { action: accept, from: ^InitWindow$ }
      - { action: accept, from: ^WindowShouldClose$ }
      - { action: accept, from: ^CloseWindow$ }
      - { action: accept, from: ^IsWindowReady$ }
      - { action: accept, from: ^IsWindowFullscreen$ }
      - { action: accept, from: ^IsWindowHidden$ }
      - { action: accept, from: ^IsWindowMinimized$ }
      - { action: accept, from: ^IsWindowMaximized$ }
      - { action: accept, from: ^IsWindowFocused$ }
      - { action: accept, from: ^IsWindowResized$ }
      - { action: accept, from: ^IsWindowState$ }
      - { action: accept, from: ^SetWindowState$ }
      - { action: accept, from: ^ClearWindowState$ }
      - { action: accept, from: ^ToggleFullscreen$ }
      - { action: accept, from: ^MaximizeWindow$ }
      - { action: accept, from: ^MinimizeWindow$ }
      - { action: accept, from: ^RestoreWindow$ }
      - { action: accept, from: ^SetWindowIcon$ }
      - { action: accept, from: ^SetWindowTitle$ }
      - { action: accept, from: ^SetWindowPosition$ }
      - { action: accept, from: ^SetWindowMonitor$ }
      - { action: accept, from: ^SetWindowMinSize$ }
      - { action: accept, from: ^SetWindowSize$ }
      - { action: accept, from: ^GetWindowHandle$ }
      - { action: accept, from: ^GetScreenWidth$ }
      - { action: accept, from: ^GetScreenHeight$ }
      - { action: accept, from: ^GetMonitorCount$ }
      - { action: accept, from: ^GetCurrentMonitor$ }
      - { action: accept, from: ^GetMonitorPosition$ }
      - { action: accept, from: ^GetMonitorWidth$ }
      - { action: accept, from: ^GetMonitorHeight$ }
      - { action: accept, from: ^GetMonitorPhysicalWidth$ }
      - { action: accept, from: ^GetMonitorPhysicalHeight$ }
      - { action: accept, from: ^GetMonitorRefreshRate$ }
      - { action: accept, from: ^GetWindowPosition$ }
      - { action: accept, from: ^GetWindowScaleDPI$ }
      - { action: accept, from: ^GetMonitorName$ }
      - { action: accept, from: ^SetClipboardText$ }
      - { action: accept, from: ^GetClipboardText$ }
      - { action: accept, from: ^ShowCursor$ }
      - { action: accept, from: ^HideCursor$ }
      - { action: accept, from: ^IsCursorHidden$ }
      - { action: accept, from: ^EnableCursor$ }
      - { action: accept, from: ^DisableCursor$ }
      - { action: accept, from: ^IsCursorOnScreen$ }
      - { action: accept, from: ^ClearBackground$ }
      - { action: accept, from: ^BeginDrawing$ }
      - { action: accept, from: ^EndDrawing$ }
      - { action: accept, from: ^BeginMode2D$ }
      - { action: accept, from: ^EndMode2D$ }
      - { action: accept, from: ^BeginMode3D$ }
      - { action: accept, from: ^EndMode3D$ }
      - { action: accept, from: ^BeginTextureMode$ }
      - { action: accept, from: ^EndTextureMode$ }
      - { action: accept, from: ^BeginScissorMode$ }
      - { action: accept, from: ^EndScissorMode$ }
      - { action: accept, from: ^GetMouseRay$ }
      - { action: accept, from: ^GetCameraMatrix$ }
      - { action: accept, from: ^GetCameraMatrix2D$ }
      - { action: accept, from: ^GetWorldToScreen$ }
      - { action: accept, from: ^GetWorldToScreenEx$ }
      - { action: accept, from: ^GetWorldToScreen2D$ }
      - { action: accept, from: ^GetScreenToWorld2D$ }
      - { action: accept, from: ^SetTargetFPS$ }
      - { action: accept, from: ^GetFPS$ }
      - { action: accept, from: ^GetFrameTime$ }
      - { action: accept, from: ^GetTime$ }
      - { action: accept, from: ^SetConfigFlags$ }
      - { action: accept, from: ^SetTraceLogLevel$ }
      - { action: accept, from: ^SetTraceLogExit$ }
      - { action: accept, from: ^SetTraceLogCallback$ }
      - { action: accept, from: ^TraceLog$ }
      - { action: accept, from: ^MemAlloc$ }
      - { action: accept, from: ^MemFree$ }
      - { action: accept, from: ^TakeScreenshot$ }
      - { action: accept, from: ^GetRandomValue$ }
      - { action: accept, from: ^LoadFileData$ }
      - { action: accept, from: ^UnloadFileData$ }
      - { action: accept, from: ^SaveFileData$ }
      - { action: accept, from: ^LoadFileText$ }
      - { action: accept, from: ^UnloadFileText$ }
      - { action: accept, from: ^SaveFileText$ }
      - { action: accept, from: ^FileExists$ }
      - { action: accept, from: ^DirectoryExists$ }
      - { action: accept, from: ^IsFileExtension$ }
      - { action: accept, from: ^GetFileExtension$ }
      - { action: accept, from: ^GetFileName$ }
      - { action: accept, from: ^GetFileNameWithoutExt$ }
      - { action: accept, from: ^GetDirectoryPath$ }
      - { action: accept, from: ^GetPrevDirectoryPath$ }
      - { action: accept, from: ^GetWorkingDirectory$ }
      - { action: accept, from: ^GetDirectoryFiles$ }
      - { action: accept, from: ^ClearDirectoryFiles$ }
      - { action: accept, from: ^ChangeDirectory$ }
      - { action: accept, from: ^IsFileDropped$ }
      - { action: accept, from: ^GetDroppedFiles$ }
      - { action: accept, from: ^ClearDroppedFiles$ }
      - { action: accept, from: ^GetFileModTime$ }
      - { action: accept, from: ^CompressData$ }
      - { action: accept, from: ^DecompressData$ }
      - { action: accept, from: ^SaveStorageValue$ }
      - { action: accept, from: ^LoadStorageValue$ }
      - { action: accept, from: ^OpenURL$ }
      - { action: accept, from: ^IsKeyPressed$ }
      - { action: accept, from: ^IsKeyDown$ }
      - { action: accept, from: ^IsKeyReleased$ }
      - { action: accept, from: ^IsKeyUp$ }
      - { action: accept, from: ^SetExitKey$ }
      - { action: accept, from: ^GetKeyPressed$ }
      - { action: accept, from: ^GetCharPressed$ }
      - { action: accept, from: ^IsGamepadAvailable$ }
      - { action: accept, from: ^IsGamepadName$ }
      - { action: accept, from: ^GetGamepadName$ }
      - { action: accept, from: ^IsGamepadButtonPressed$ }
      - { action: accept, from: ^IsGamepadButtonDown$ }
      - { action: accept, from: ^IsGamepadButtonReleased$ }
      - { action: accept, from: ^IsGamepadButtonUp$ }
      - { action: accept, from: ^GetGamepadButtonPressed$ }
      - { action: accept, from: ^GetGamepadAxisCount$ }
      - { action: accept, from: ^GetGamepadAxisMovement$ }
      - { action: accept, from: ^IsMouseButtonPressed$ }
      - { action: accept, from: ^IsMouseButtonDown$ }
      - { action: accept, from: ^IsMouseButtonReleased$ }
      - { action: accept, from: ^IsMouseButtonUp$ }
      - { action: accept, from: ^GetMouseX$ }
      - { action: accept, from: ^GetMouseY$ }
      - { action: accept, from: ^GetMousePosition$ }
      - { action: accept, from: ^SetMousePosition$ }
      - { action: accept, from: ^SetMouseOffset$ }
      - { action: accept, from: ^SetMouseScale$ }
      - { action: accept, from: ^GetMouseWheelMove$ }
      - { action: accept, from: ^GetMouseCursor$ }
      - { action: accept, from: ^SetMouseCursor$ }
      - { action: accept, from: ^GetTouchX$ }
      - { action: accept, from: ^GetTouchY$ }
      - { action: accept, from: ^GetTouchPosition$ }
      - { action: accept, from: ^SetGesturesEnabled$ }
      - { action: accept, from: ^IsGestureDetected$ }
      - { action: accept, from: ^GetGestureDetected$ }
      - { action: accept, from: ^GetTouchPointsCount$ }
      - { action: accept, from: ^GetGestureHoldDuration$ }
      - { action: accept, from: ^GetGestureDragVector$ }
      - { action: accept, from: ^GetGestureDragAngle$ }
      - { action: accept, from: ^GetGesturePinchVector$ }
      - { action: accept, from: ^GetGesturePinchAngle$ }
      - { action: accept, from: ^SetCameraMode$ }
      - { action: accept, from: ^UpdateCamera$ }
      - { action: accept, from: ^SetCameraPanControl$ }
      - { action: accept, from: ^SetCameraAltControl$ }
      - { action: accept, from: ^SetCameraSmoothZoomControl$ }
      - { action: accept, from: ^SetCameraMoveControls$ }
      - { action: accept, from: ^DrawPixel$ }
      - { action: accept, from: ^DrawPixelV$ }
      - { action: accept, from: ^DrawLine$ }
      - { action: accept, from: ^DrawLineV$ }
      - { action: accept, from: ^DrawLineEx$ }
      - { action: accept, from: ^DrawLineBezier$ }
      - { action: accept, from: ^DrawLineBezierQuad$ }
      - { action: accept, from: ^DrawLineStrip$ }
      - { action: accept, from: ^DrawCircle$ }
      - { action: accept, from: ^DrawCircleSector$ }
      - { action: accept, from: ^DrawCircleSectorLines$ }
      - { action: accept, from: ^DrawCircleGradient$ }
      - { action: accept, from: ^DrawCircleV$ }
      - { action: accept, from: ^DrawCircleLines$ }
      - { action: accept, from: ^DrawEllipse$ }
      - { action: accept, from: ^DrawEllipseLines$ }
      - { action: accept, from: ^DrawRing$ }
      - { action: accept, from: ^DrawRingLines$ }
      - { action: accept, from: ^DrawRectangle$ }
      - { action: accept, from: ^DrawRectangleV$ }
      - { action: accept, from: ^DrawRectangleRec$ }
      - { action: accept, from: ^DrawRectanglePro$ }
      - { action: accept, from: ^DrawRectangleGradientV$ }
      - { action: accept, from: ^DrawRectangleGradientH$ }
      - { action: accept, from: ^DrawRectangleGradientEx$ }
      - { action: accept, from: ^DrawRectangleLines$ }
      - { action: accept, from: ^DrawRectangleLinesEx$ }
      - { action: accept, from: ^DrawRectangleRounded$ }
      - { action: accept, from: ^DrawRectangleRoundedLines$ }
      - { action: accept, from: ^DrawTriangle$ }
      - { action: accept, from: ^DrawTriangleLines$ }
      - { action: accept, from: ^DrawTriangleFan$ }
      - { action: accept, from: ^DrawTriangleStrip$ }
      - { action: accept, from: ^DrawPoly$ }
      - { action: accept, from: ^DrawPolyLines$ }
      - { action: accept, from: ^CheckCollisionRecs$ }
      - { action: accept, from: ^CheckCollisionCircles$ }
      - { action: accept, from: ^CheckCollisionCircleRec$ }
      - { action: accept, from: ^CheckCollisionPointRec$ }
      - { action: accept, from: ^CheckCollisionPointCircle$ }
      - { action: accept, from: ^CheckCollisionPointTriangle$ }
      - { action: accept, from: ^CheckCollisionLines$ }
      - { action: accept, from: ^GetCollisionRec$ }
      - { action: accept, from: ^LoadImage$ }
      - { action: accept, from: ^LoadImageRaw$ }
      - { action: accept, from: ^LoadImageAnim$ }
      - { action: accept, from: ^LoadImageFromMemory$ }
      - { action: accept, from: ^UnloadImage$ }
      - { action: accept, from: ^ExportImage$ }
      - { action: accept, from: ^ExportImageAsCode$ }
      - { action: accept, from: ^GenImageColor$ }
      - { action: accept, from: ^GenImageGradientV$ }
      - { action: accept, from: ^GenImageGradientH$ }
      - { action: accept, from: ^GenImageGradientRadial$ }
      - { action: accept, from: ^GenImageChecked$ }
      - { action: accept, from: ^GenImageWhiteNoise$ }
      - { action: accept, from: ^GenImagePerlinNoise$ }
      - { action: accept, from: ^GenImageCellular$ }
      - { action: accept, from: ^ImageCopy$ }
      - { action: accept, from: ^ImageFromImage$ }
      - { action: accept, from: ^ImageText$ }
      - { action: accept, from: ^ImageTextEx$ }
      - { action: accept, from: ^ImageFormat$ }
      - { action: accept, from: ^ImageToPOT$ }
      - { action: accept, from: ^ImageCrop$ }
      - { action: accept, from: ^ImageAlphaCrop$ }
      - { action: accept, from: ^ImageAlphaClear$ }
      - { action: accept, from: ^ImageAlphaMask$ }
      - { action: accept, from: ^ImageAlphaPremultiply$ }
      - { action: accept, from: ^ImageResize$ }
      - { action: accept, from: ^ImageResizeNN$ }
      - { action: accept, from: ^ImageResizeCanvas$ }
      - { action: accept, from: ^ImageMipmaps$ }
      - { action: accept, from: ^ImageDither$ }
      - { action: accept, from: ^ImageFlipVertical$ }
      - { action: accept, from: ^ImageFlipHorizontal$ }
      - { action: accept, from: ^ImageRotateCW$ }
      - { action: accept, from: ^ImageRotateCCW$ }
      - { action: accept, from: ^ImageColorTint$ }
      - { action: accept, from: ^ImageColorInvert$ }
      - { action: accept, from: ^ImageColorGrayscale$ }
      - { action: accept, from: ^ImageColorContrast$ }
      - { action: accept, from: ^ImageColorBrightness$ }
      - { action: accept, from: ^ImageColorReplace$ }
      - { action: accept, from: ^LoadImageColors$ }
      - { action: accept, from: ^LoadImagePalette$ }
      - { action: accept, from: ^UnloadImageColors$ }
      - { action: accept, from: ^UnloadImagePalette$ }
      - { action: accept, from: ^GetImageAlphaBorder$ }
      - { action: accept, from: ^ImageClearBackground$ }
      - { action: accept, from: ^ImageDrawPixel$ }
      - { action: accept, from: ^ImageDrawPixelV$ }
      - { action: accept, from: ^ImageDrawLine$ }
      - { action: accept, from: ^ImageDrawLineV$ }
      - { action: accept, from: ^ImageDrawCircle$ }
      - { action: accept, from: ^ImageDrawCircleV$ }
      - { action: accept, from: ^ImageDrawRectangle$ }
      - { action: accept, from: ^ImageDrawRectangleV$ }
      - { action: accept, from: ^ImageDrawRectangleRec$ }
      - { action: accept, from: ^ImageDrawRectangleLines$ }
      - { action: accept, from: ^ImageDraw$ }
      - { action: accept, from: ^ImageDrawText$ }
      - { action: accept, from: ^ImageDrawTextEx$ }
      - { action: accept, from: ^LoadTexture$ }
      - { action: accept, from: ^LoadTextureFromImage$ }
      - { action: accept, from: ^LoadTextureCubemap$ }
      - { action: accept, from: ^LoadRenderTexture$ }
      - { action: accept, from: ^UnloadTexture$ }
      - { action: accept, from: ^UnloadRenderTexture$ }
      - { action: accept, from: ^UpdateTexture$ }
      - { action: accept, from: ^UpdateTextureRec$ }
      - { action: accept, from: ^GetTextureData$ }
      - { action: accept, from: ^GetScreenData$ }
      - { action: accept, from: ^GenTextureMipmaps$ }
      - { action: accept, from: ^SetTextureFilter$ }
      - { action: accept, from: ^SetTextureWrap$ }
      - { action: accept, from: ^DrawTexture$ }
      - { action: accept, from: ^DrawTextureV$ }
      - { action: accept, from: ^DrawTextureEx$ }
      - { action: accept, from: ^DrawTextureRec$ }
      - { action: accept, from: ^DrawTextureQuad$ }
      - { action: accept, from: ^DrawTextureTiled$ }
      - { action: accept, from: ^DrawTexturePro$ }
      - { action: accept, from: ^DrawTextureNPatch$ }
      - { action: accept, from: ^Fade$ }
      - { action: accept, from: ^ColorToInt$ }
      - { action: accept, from: ^ColorNormalize$ }
      - { action: accept, from: ^ColorFromNormalized$ }
      - { action: accept, from: ^ColorToHSV$ }
      - { action: accept, from: ^ColorFromHSV$ }
      - { action: accept, from: ^ColorAlpha$ }
      - { action: accept, from: ^ColorAlphaBlend$ }
      - { action: accept, from: ^GetColor$ }
      - { action: accept, from: ^GetPixelColor$ }
      - { action: accept, from: ^SetPixelColor$ }
      - { action: accept, from: ^GetPixelDataSize$ }
      - { action: accept, from: ^GetFontDefault$ }
      - { action: accept, from: ^LoadFont$ }
      - { action: accept, from: ^LoadFontEx$ }
      - { action: accept, from: ^LoadFontFromImage$ }
      - { action: accept, from: ^LoadFontFromMemory$ }
      - { action: accept, from: ^LoadFontData$ }
      # - { action: accept, from: ^GenImageFontAtlas$ }
      - { action: accept, from: ^UnloadFontData$ }
      - { action: accept, from: ^UnloadFont$ }
      - { action: accept, from: ^DrawFPS$ }
      - { action: accept, from: ^DrawText$ }
      - { action: accept, from: ^DrawTextEx$ }
      - { action: accept, from: ^DrawTextRec$ }
      - { action: accept, from: ^DrawTextRecEx$ }
      - { action: accept, from: ^DrawTextCodepoint$ }
      - { action: accept, from: ^MeasureText$ }
      - { action: accept, from: ^MeasureTextEx$ }
      - { action: accept, from: ^GetGlyphIndex$ }
      - { action: accept, from: ^TextCopy$ }
      - { action: accept, from: ^TextIsEqual$ }
      - { action: accept, from: ^TextLength$ }
      - { action: accept, from: ^TextFormat$ }
      - { action: accept, from: ^TextSubtext$ }
      - { action: accept, from: ^TextReplace$ }
      - { action: accept, from: ^TextInsert$ }
      # - { action: accept, from: ^TextJoin$ }
      - { action: accept, from: ^TextSplit$ }
      - { action: accept, from: ^TextAppend$ }
      - { action: accept, from: ^TextFindIndex$ }
      - { action: accept, from: ^TextToUpper$ }
      - { action: accept, from: ^TextToLower$ }
      - { action: accept, from: ^TextToPascal$ }
      - { action: accept, from: ^TextToInteger$ }
      - { action: accept, from: ^TextToUtf8$ }
      - { action: accept, from: ^GetCodepoints$ }
      - { action: accept, from: ^GetCodepointsCount$ }
      - { action: accept, from: ^GetNextCodepoint$ }
      - { action: accept, from: ^CodepointToUtf8$ }
      - { action: accept, from: ^DrawLine3D$ }
      - { action: accept, from: ^DrawPoint3D$ }
      - { action: accept, from: ^DrawCircle3D$ }
      - { action: accept, from: ^DrawTriangle3D$ }
      - { action: accept, from: ^DrawTriangleStrip3D$ }
      - { action: accept, from: ^DrawCube$ }
      - { action: accept, from: ^DrawCubeV$ }
      - { action: accept, from: ^DrawCubeWires$ }
      - { action: accept, from: ^DrawCubeWiresV$ }
      - { action: accept, from: ^DrawCubeTexture$ }
      - { action: accept, from: ^DrawSphere$ }
      - { action: accept, from: ^DrawSphereEx$ }
      - { action: accept, from: ^DrawSphereWires$ }
      - { action: accept, from: ^DrawCylinder$ }
      - { action: accept, from: ^DrawCylinderWires$ }
      - { action: accept, from: ^DrawPlane$ }
      - { action: accept, from: ^DrawRay$ }
      - { action: accept, from: ^DrawGrid$ }
      - { action: accept, from: ^DrawGizmo$ }
      - { action: accept, from: ^LoadModel$ }
      - { action: accept, from: ^LoadModelFromMesh$ }
      - { action: accept, from: ^UnloadModel$ }
      - { action: accept, from: ^UnloadModelKeepMeshes$ }
      - { action: accept, from: ^LoadMeshes$ }
      - { action: accept, from: ^UnloadMesh$ }
      - { action: accept, from: ^ExportMesh$ }
      - { action: accept, from: ^LoadMaterials$ }
      - { action: accept, from: ^LoadMaterialDefault$ }
      - { action: accept, from: ^UnloadMaterial$ }
      - { action: accept, from: ^SetMaterialTexture$ }
      - { action: accept, from: ^SetModelMeshMaterial$ }
      - { action: accept, from: ^LoadModelAnimations$ }
      - { action: accept, from: ^UpdateModelAnimation$ }
      - { action: accept, from: ^UnloadModelAnimation$ }
      - { action: accept, from: ^IsModelAnimationValid$ }
      - { action: accept, from: ^GenMeshPoly$ }
      - { action: accept, from: ^GenMeshPlane$ }
      - { action: accept, from: ^GenMeshCube$ }
      - { action: accept, from: ^GenMeshSphere$ }
      - { action: accept, from: ^GenMeshHemiSphere$ }
      - { action: accept, from: ^GenMeshCylinder$ }
      - { action: accept, from: ^GenMeshTorus$ }
      - { action: accept, from: ^GenMeshKnot$ }
      - { action: accept, from: ^GenMeshHeightmap$ }
      - { action: accept, from: ^GenMeshCubicmap$ }
      - { action: accept, from: ^MeshBoundingBox$ }
      - { action: accept, from: ^MeshTangents$ }
      - { action: accept, from: ^MeshBinormals$ }
      - { action: accept, from: ^MeshNormalsSmooth$ }
      - { action: accept, from: ^DrawModel$ }
      - { action: accept, from: ^DrawModelEx$ }
      - { action: accept, from: ^DrawModelWires$ }
      - { action: accept, from: ^DrawModelWiresEx$ }
      - { action: accept, from: ^DrawBoundingBox$ }
      - { action: accept, from: ^DrawBillboard$ }
      - { action: accept, from: ^DrawBillboardRec$ }
      - { action: accept, from: ^CheckCollisionSpheres$ }
      - { action: accept, from: ^CheckCollisionBoxes$ }
      - { action: accept, from: ^CheckCollisionBoxSphere$ }
      - { action: accept, from: ^CheckCollisionRaySphere$ }
      - { action: accept, from: ^CheckCollisionRaySphereEx$ }
      - { action: accept, from: ^CheckCollisionRayBox$ }
      - { action: accept, from: ^GetCollisionRayMesh$ }
      - { action: accept, from: ^GetCollisionRayModel$ }
      - { action: accept, from: ^GetCollisionRayTriangle$ }
      - { action: accept, from: ^GetCollisionRayGround$ }
      - { action: accept, from: ^LoadShader$ }
      - { action: accept, from: ^LoadShaderCode$ }
      - { action: accept, from: ^UnloadShader$ }
      - { action: accept, from: ^GetShaderDefault$ }
      - { action: accept, from: ^GetTextureDefault$ }
      - { action: accept, from: ^GetShapesTexture$ }
      - { action: accept, from: ^GetShapesTextureRec$ }
      - { action: accept, from: ^SetShapesTexture$ }
      - { action: accept, from: ^GetShaderLocation$ }
      - { action: accept, from: ^GetShaderLocationAttrib$ }
      - { action: accept, from: ^SetShaderValue$ }
      - { action: accept, from: ^SetShaderValueV$ }
      - { action: accept, from: ^SetShaderValueMatrix$ }
      - { action: accept, from: ^SetShaderValueTexture$ }
      - { action: accept, from: ^SetMatrixProjection$ }
      - { action: accept, from: ^SetMatrixModelview$ }
      - { action: accept, from: ^GetMatrixModelview$ }
      - { action: accept, from: ^GetMatrixProjection$ }
      - { action: accept, from: ^GenTextureCubemap$ }
      - { action: accept, from: ^GenTextureIrradiance$ }
      - { action: accept, from: ^GenTexturePrefilter$ }
      - { action: accept, from: ^GenTextureBRDF$ }
      - { action: accept, from: ^BeginShaderMode$ }
      - { action: accept, from: ^EndShaderMode$ }
      - { action: accept, from: ^BeginBlendMode$ }
      - { action: accept, from: ^EndBlendMode$ }
      - { action: accept, from: ^InitVrSimulator$ }
      - { action: accept, from: ^CloseVrSimulator$ }
      - { action: accept, from: ^UpdateVrTracking$ }
      - { action: accept, from: ^SetVrConfiguration$ }
      - { action: accept, from: ^IsVrSimulatorReady$ }
      - { action: accept, from: ^ToggleVrMode$ }
      - { action: accept, from: ^BeginVrDrawing$ }
      - { action: accept, from: ^EndVrDrawing$ }
      - { action: accept, from: ^InitAudioDevice$ }
      - { action: accept, from: ^CloseAudioDevice$ }
      - { action: accept, from: ^IsAudioDeviceReady$ }
      - { action: accept, from: ^SetMasterVolume$ }
      - { action: accept, from: ^LoadWave$ }
      - { action: accept, from: ^LoadWaveFromMemory$ }
      - { action: accept, from: ^LoadSound$ }
      - { action: accept, from: ^LoadSoundFromWave$ }
      - { action: accept, from: ^UpdateSound$ }
      - { action: accept, from: ^UnloadWave$ }
      - { action: accept, from: ^UnloadSound$ }
      - { action: accept, from: ^ExportWave$ }
      - { action: accept, from: ^ExportWaveAsCode$ }
      - { action: accept, from: ^PlaySound$ }
      - { action: accept, from: ^StopSound$ }
      - { action: accept, from: ^PauseSound$ }
      - { action: accept, from: ^ResumeSound$ }
      - { action: accept, from: ^PlaySoundMulti$ }
      - { action: accept, from: ^StopSoundMulti$ }
      - { action: accept, from: ^GetSoundsPlaying$ }
      - { action: accept, from: ^IsSoundPlaying$ }
      - { action: accept, from: ^SetSoundVolume$ }
      - { action: accept, from: ^SetSoundPitch$ }
      - { action: accept, from: ^WaveFormat$ }
      - { action: accept, from: ^WaveCopy$ }
      - { action: accept, from: ^WaveCrop$ }
      - { action: accept, from: ^LoadWaveSamples$ }
      - { action: accept, from: ^UnloadWaveSamples$ }
      - { action: accept, from: ^LoadMusicStream$ }
      - { action: accept, from: ^UnloadMusicStream$ }
      - { action: accept, from: ^PlayMusicStream$ }
      - { action: accept, from: ^UpdateMusicStream$ }
      - { action: accept, from: ^StopMusicStream$ }
      - { action: accept, from: ^PauseMusicStream$ }
      - { action: accept, from: ^ResumeMusicStream$ }
      - { action: accept, from: ^IsMusicPlaying$ }
      - { action: accept, from: ^SetMusicVolume$ }
      - { action: accept, from: ^SetMusicPitch$ }
      - { action: accept, from: ^GetMusicTimeLength$ }
      - { action: accept, from: ^GetMusicTimePlayed$ }
      - { action: accept, from: ^InitAudioStream$ }
      - { action: accept, from: ^UpdateAudioStream$ }
      - { action: accept, from: ^CloseAudioStream$ }
      - { action: accept, from: ^IsAudioStreamProcessed$ }
      - { action: accept, from: ^PlayAudioStream$ }
      - { action: accept, from: ^PauseAudioStream$ }
      - { action: accept, from: ^ResumeAudioStream$ }
      - { action: accept, from: ^IsAudioStreamPlaying$ }
      - { action: accept, from: ^StopAudioStream$ }
      - { action: accept, from: ^SetAudioStreamVolume$ }
      - { action: accept, from: ^SetAudioStreamPitch$ }
      - { action: accept, from: ^SetAudioStreamBufferSizeDefault$ }

      - { action: ignore, from: "(?i)Trace" }
      - { action: ignore, from: "^TextFormat$" }

      # raymath
      - { action: accept, from: ^Clamp$ }
      - { action: accept, from: ^Lerp$ }
      - { action: accept, from: ^Normalize$ }
      - { action: accept, from: ^Remap$ }
      - { action: accept, from: ^Vector2Zero$ }
      - { action: accept, from: ^Vector2One$ }
      - { action: accept, from: ^Vector2Add$ }
      - { action: accept, from: ^Vector2AddValue$ }
      - { action: accept, from: ^Vector2Subtract$ }
      - { action: accept, from: ^Vector2SubtractValue$ }
      - { action: accept, from: ^Vector2Length$ }
      - { action: accept, from: ^Vector2LengthSqr$ }
      - { action: accept, from: ^Vector2DotProduct$ }
      - { action: accept, from: ^Vector2Distance$ }
      - { action: accept, from: ^Vector2Angle$ }
      - { action: accept, from: ^Vector2Scale$ }
      - { action: accept, from: ^Vector2Multiply$ }
      - { action: accept, from: ^Vector2Negate$ }
      - { action: accept, from: ^Vector2Divide$ }
      - { action: accept, from: ^Vector2Normalize$ }
      - { action: accept, from: ^Vector2Lerp$ }
      - { action: accept, from: ^Vector2Rotate$ }
      - { action: accept, from: ^Vector2MoveTowards$ }
      - { action: accept, from: ^Vector3Zero$ }
      - { action: accept, from: ^Vector3One$ }
      - { action: accept, from: ^Vector3Add$ }
      - { action: accept, from: ^Vector3AddValue$ }
      - { action: accept, from: ^Vector3Subtract$ }
      - { action: accept, from: ^Vector3SubtractValue$ }
      - { action: accept, from: ^Vector3Scale$ }
      - { action: accept, from: ^Vector3Multiply$ }
      - { action: accept, from: ^Vector3CrossProduct$ }
      - { action: accept, from: ^Vector3Perpendicular$ }
      - { action: accept, from: ^Vector3Length$ }
      - { action: accept, from: ^Vector3LengthSqr$ }
      - { action: accept, from: ^Vector3DotProduct$ }
      - { action: accept, from: ^Vector3Distance$ }
      - { action: accept, from: ^Vector3Negate$ }
      - { action: accept, from: ^Vector3Divide$ }
      - { action: accept, from: ^Vector3Normalize$ }
      - { action: accept, from: ^Vector3OrthoNormalize$ }
      - { action: accept, from: ^Vector3Transform$ }
      - { action: accept, from: ^Vector3RotateByQuaternion$ }
      - { action: accept, from: ^Vector3Lerp$ }
      - { action: accept, from: ^Vector3Reflect$ }
      - { action: accept, from: ^Vector3Min$ }
      - { action: accept, from: ^Vector3Max$ }
      - { action: accept, from: ^Vector3Barycenter$ }
      # - { action: accept, from: ^Vector3ToFloatV$ }
      - { action: accept, from: ^MatrixDeterminant$ }
      - { action: accept, from: ^MatrixTrace$ }
      - { action: accept, from: ^MatrixTranspose$ }
      - { action: accept, from: ^MatrixInvert$ }
      - { action: accept, from: ^MatrixNormalize$ }
      - { action: accept, from: ^MatrixIdentity$ }
      - { action: accept, from: ^MatrixAdd$ }
      - { action: accept, from: ^MatrixSubtract$ }
      - { action: accept, from: ^MatrixTranslate$ }
      - { action: accept, from: ^MatrixRotate$ }
      - { action: accept, from: ^MatrixRotateXYZ$ }
      - { action: accept, from: ^MatrixRotateX$ }
      - { action: accept, from: ^MatrixRotateY$ }
      - { action: accept, from: ^MatrixRotateZ$ }
      - { action: accept, from: ^MatrixScale$ }
      - { action: accept, from: ^MatrixMultiply$ }
      - { action: accept, from: ^MatrixFrustum$ }
      - { action: accept, from: ^MatrixPerspective$ }
      - { action: accept, from: ^MatrixOrtho$ }
      - { action: accept, from: ^MatrixLookAt$ }
      # - { action: accept, from: ^MatrixToFloatV$ }
      - { action: accept, from: ^QuaternionAdd$ }
      - { action: accept, from: ^QuaternionAddValue$ }
      - { action: accept, from: ^QuaternionSubtract$ }
      - { action: accept, from: ^QuaternionSubtractValue$ }
      - { action: accept, from: ^QuaternionIdentity$ }
      - { action: accept, from: ^QuaternionLength$ }
      - { action: accept, from: ^QuaternionNormalize$ }
      - { action: accept, from: ^QuaternionInvert$ }
      - { action: accept, from: ^QuaternionMultiply$ }
      - { action: accept, from: ^QuaternionScale$ }
      - { action: accept, from: ^QuaternionDivide$ }
      - { action: accept, from: ^QuaternionLerp$ }
      - { action: accept, from: ^QuaternionNlerp$ }
      - { action: accept, from: ^QuaternionSlerp$ }
      - { action: accept, from: ^QuaternionFromVector3ToVector3$ }
      - { action: accept, from: ^QuaternionFromMatrix$ }
      - { action: accept, from: ^QuaternionToMatrix$ }
      - { action: accept, from: ^QuaternionFromAxisAngle$ }
      - { action: accept, from: ^QuaternionToAxisAngle$ }
      - { action: accept, from: ^QuaternionFromEuler$ }
      - { action: accept, from: ^QuaternionToEuler$ }
      - { action: accept, from: ^QuaternionTransform$ }

      # easings
      - { action: accept, from: ^Ease }

      - { action: ignore, from: __ }
    type:
      # raylib
      - { action: accept, from: ^ConfigFlag$ }
      - { action: accept, from: ^Keyboard }
      - { action: accept, from: ^Android }
      - { action: accept, from: ^Mouse }
      - { action: accept, from: ^Gamepad }
      - { action: accept, from: ^Shader }
      - { action: accept, from: ^Material }
      - { action: accept, from: ^Pixel }
      - { action: accept, from: ^Texture }
      - { action: accept, from: ^Cubemap }
      - { action: accept, from: ^Font }
      - { action: accept, from: ^Blend }
      - { action: accept, from: ^Gesture }
      - { action: accept, from: ^Camera }
      - { action: accept, from: ^NPatch }
      - { action: accept, from: ^Vector2$ }
      - { action: accept, from: ^Vector3$ }
      - { action: accept, from: ^Vector4$ }
      - { action: accept, from: ^Quaternion$ }
      - { action: accept, from: ^Matrix$ }
      - { action: accept, from: ^Color$ }
      - { action: accept, from: ^Rectangle$ }
      - { action: accept, from: ^Image$ }
      - { action: accept, from: ^Texture2D$ }
      - { action: accept, from: ^Texture$ }
      - { action: accept, from: ^TextureCubemap$ }
      - { action: accept, from: ^RenderTexture2D$ }
      - { action: accept, from: ^RenderTexture$ }
      - { action: accept, from: ^NPatchInfo$ }
      - { action: accept, from: ^CharInfo$ }
      - { action: accept, from: ^Font$ }
      - { action: accept, from: ^Camera3D$ }
      - { action: accept, from: ^Camera$ }
      - { action: accept, from: ^Camera2D$ }
      - { action: accept, from: ^Mesh$ }
      - { action: accept, from: ^Shader$ }
      - { action: accept, from: ^MaterialMap$ }
      - { action: accept, from: ^Material$ }
      - { action: accept, from: ^Transform$ }
      - { action: accept, from: ^BoneInfo$ }
      - { action: accept, from: ^Model$ }
      - { action: accept, from: ^ModelAnimation$ }
      - { action: accept, from: ^Ray$ }
      - { action: accept, from: ^RayHitInfo$ }
      - { action: accept, from: ^BoundingBox$ }
      - { action: accept, from: ^Wave$ }
      - { action: accept, from: ^RAudioBuffer$ }
      - { action: accept, from: ^AudioStream$ }
      - { action: accept, from: ^Sound$ }
      - { action: accept, from: ^Music$ }
      - { action: accept, from: ^VrDeviceInfo$ }
      - { action: accept, from: ^MultiText$ }

      - { action: ignore, from: "(?i)Trace" }

      # raymath
      # - { action: accept, from: ^float3$ }
      # - { action: accept, from: ^float16$ }

    private:
      - { transform: unexport }
    post-global:
      - { action: replace, from: _$ }
      - { load: snakecase }
